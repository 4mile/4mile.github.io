{"version":3,"sources":["webpack:///./src/components/styled.js","webpack:///./src/components/PageContent.js","webpack:///./src/components/guides/axes/scales.js","webpack:///./src/components/guides/axes/theme.js","webpack:///./src/components/guides/axes/AxesPosition.js","webpack:///./src/components/guides/axes/AxesTicks.js","webpack:///./src/components/guides/axes/AxesLegend.js","webpack:///./src/pages/guides/axes.js"],"names":["FullWidthBanner","styled","div","theme","colors","cardBackground","DescriptionBlock","media","tablet","mobile","Card","cardShadow","linearXScale","scaleLinear","range","domain","type","linearYScale","pointXScale","scalePoint","timeXScale","scaleTime","Date","timeXScaleHours","UTC","useAxisTheme","useTheme","useMemo","nivo","axis","line","strokeWidth","legend","text","fill","accent","AxesPosition","id","className","role","width","height","transform","animate","xScale","yScale","motionStiffness","motionDamping","top","legendPosition","legendOffset","right","bottom","left","AxesTicks","href","target","rel","style","justifyContent","alignItems","scale","tickValues","length","ticksPosition","format","axisPositions","AxesLegend","map","position","i","key","Axes","render","Layout","title","PageContent","to","Component"],"mappings":"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","file":"component---src-pages-guides-axes-js-1428b25ec84a4763c9c8.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale'\n\nexport const linearXScale = scaleLinear()\n    .range([0, 280])\n    .domain([0, 80])\nlinearXScale.type = 'linear'\n\nexport const linearYScale = scaleLinear()\n    .range([160, 0])\n    .domain([0, 35])\nlinearYScale.type = 'linear'\n\nexport const pointXScale = scalePoint()\n    .range([0, 280])\n    .domain(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'])\npointXScale.type = 'point'\n\nexport const timeXScale = scaleTime()\n    .range([0, 280])\n    .domain([new Date(2019, 0, 1, 0, 0, 0, 0), new Date(2020, 0, 1, 0, 0, 0, 0)])\ntimeXScale.type = 'time'\n\nexport const timeXScaleHours = scaleTime()\n    .range([0, 280])\n    .domain([\n        new Date(Date.UTC(2020, 0, 1, 9, 0, 0, 0)),\n        new Date(Date.UTC(2020, 0, 1, 10, 0, 0, 0)),\n    ])\ntimeXScaleHours.type = 'time'\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { useTheme } from '../../../theming/context'\n\nexport const useAxisTheme = () => {\n    const theme = useTheme()\n    const nivoTheme = useMemo(() => {\n        return {\n            ...theme.nivo,\n            axis: {\n                ...theme.nivo.axis,\n                domain: {\n                    ...theme.nivo.axis.domain,\n                    line: {\n                        ...theme.nivo.axis.domain.line,\n                        strokeWidth: 1,\n                    },\n                },\n                legend: {\n                    ...theme.nivo.axis.legend,\n                    text: {\n                        ...theme.nivo.axis.legend.text,\n                        fill: theme.colors.accent,\n                    },\n                },\n            },\n        }\n    }, [theme])\n\n    return nivoTheme\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axes } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesPosition = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"position\">Axis position</h2>\n                <p>\n                    Axis position is determined by the property you use{' '}\n                    <strong>(top|right|bottom|left)Axis</strong>.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <div className=\"guide__illustrations\">\n                    <svg role=\"img\" width={380} height={260}>\n                        <g transform=\"translate(50,50)\">\n                            <ThemeProvider theme={theme}>\n                                <MotionConfigProvider animate={false}>\n                                    <Axes\n                                        xScale={linearXScale}\n                                        yScale={linearYScale}\n                                        width={280}\n                                        height={160}\n                                        animate={false}\n                                        motionStiffness={0}\n                                        motionDamping={0}\n                                        top={{\n                                            legend: 'axisTop',\n                                            legendPosition: 'middle',\n                                            legendOffset: -32,\n                                        }}\n                                        right={{\n                                            legend: 'axisRight',\n                                            legendPosition: 'middle',\n                                            legendOffset: 42,\n                                        }}\n                                        bottom={{\n                                            legend: 'axisBottom',\n                                            legendPosition: 'middle',\n                                            legendOffset: 38,\n                                        }}\n                                        left={{\n                                            legend: 'axisLeft',\n                                            legendPosition: 'middle',\n                                            legendOffset: -36,\n                                        }}\n                                    />\n                                </MotionConfigProvider>\n                            </ThemeProvider>\n                        </g>\n                    </svg>\n                </div>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesPosition\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, pointXScale, timeXScale, timeXScaleHours } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesTicks = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"ticks\">Axis ticks</h2>\n                <p>\n                    Axes are composed of <strong>ticks</strong>, you can control the way they are\n                    computed and their aspect. By default, computing which ticks are displayed is\n                    managed by the corresponding{' '}\n                    <a\n                        href=\"https://github.com/d3/d3-scale\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        d3 scale\n                    </a>\n                    .\n                </p>\n                <h3 id=\"ticks-values\">Ticks values</h3>\n                <p>\n                    You can use the <code>tickValues</code> property in order to customize the\n                    displayed ticks, it accepts several forms:\n                </p>\n                <ul>\n                    <li>\n                        an array of values, which should be numbers for a linear scale, values being\n                        part of the dataset for point scales, or dates for time scales.\n                    </li>\n                    <li>\n                        a number which define the number of ticks to display,{' '}\n                        <strong>doesn't work with point scale</strong>, also note that when using\n                        this form{' '}\n                        <strong>\n                            it's not guaranteed that you'll have exactly the number of ticks you\n                            asked for\n                        </strong>{' '}\n                        as d3 will make an educated guess to define them.\n                    </li>\n                    <li>\n                        a time interval, for example <code>every day</code> or{' '}\n                        <code>every 15 minutes</code>,{' '}\n                        <strong>only works when using time scales</strong>.\n                    </li>\n                </ul>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={pointXScale}\n                                        tickValues={['A', 'C', 'E', 'G', 'I']}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"point scale ['A', 'C', 'E', 'G', 'I']\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={[0, 20, 40, 60, 80]}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale [0, 20, 40, 60, 80]\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={[\n                                            new Date(2019, 0, 1, 0, 0, 0, 0),\n                                            new Date(2019, 6, 1, 0, 0, 0, 0),\n                                            new Date(2020, 0, 1, 0, 0, 0, 0),\n                                        ]}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale with three dates\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScaleHours}\n                                        tickValues=\"every 15 minutes\"\n                                        format=\"%H:%M\"\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"time scale, every 15 minutes\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesTicks\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst axisPositions = ['start', 'middle', 'end']\n\nconst AxesLegend = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"legend\">Axis legend</h2>\n                <p>\n                    You can optionally add a legend to an axis by setting the value of the{' '}\n                    <code>legend</code> property.\n                </p>\n                <h3 id=\"legend-position\">Legend position</h3>\n                <p>\n                    Legend position is controlled by two properties, <code>legendPosition</code> and{' '}\n                    <code>legendOffset</code>.<code>legendPosition</code> must be one of:{' '}\n                    <code>start</code>, <code>middle</code> or <code>end</code>,{' '}\n                    <code>legendOffset</code> will affect y position for <strong>top</strong> and{' '}\n                    <strong>bottom</strong> axes and x position for <strong>left</strong> and{' '}\n                    <strong>right</strong> axes.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={180}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(50,${i * 70 + 40})`}>\n                                        <Axis\n                                            axis=\"x\"\n                                            scale={linearXScale}\n                                            length={280}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                            <svg role=\"img\" width={260} height={260}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(${i * 90 + 50},50)`}>\n                                        <Axis\n                                            axis=\"y\"\n                                            scale={linearYScale}\n                                            length={160}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesLegend\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/seo'\nimport PageContent from '../../components/PageContent'\nimport AxesPosition from '../../components/guides/axes/AxesPosition'\nimport AxesTicks from '../../components/guides/axes/AxesTicks'\nimport AxesLegend from '../../components/guides/axes/AxesLegend'\nimport { DescriptionBlock } from '../../components/styled'\n\nexport default class Axes extends Component {\n    render() {\n        return (\n            <Layout>\n                <SEO title=\"Axes Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Axes</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <h2>Using axes in nivo components</h2>\n                    <p>\n                        Axes are built on top of{' '}\n                        <a\n                            href=\"https://github.com/d3/d3-scale\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            d3 scales\n                        </a>\n                        . A lot of nivo components make use of it (<Link to=\"/bar\">Bar</Link>,{' '}\n                        <Link to=\"/line\">Line</Link>, <Link to=\"/scatterplot\">ScatterPlot</Link>\n                        …).\n                    </p>\n                </DescriptionBlock>\n                <AxesPosition />\n                <AxesTicks />\n                <AxesLegend />\n            </Layout>\n        )\n    }\n}\n"],"sourceRoot":""}